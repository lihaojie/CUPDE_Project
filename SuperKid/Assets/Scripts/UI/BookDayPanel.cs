//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using UniRx.Operators;

namespace SuperKid
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    using QFramework;
    using UniRx;
    using UniRx.Triggers;
    
    public class BookDayPanelData : QFramework.UIPanelData
    {
        public BoxDayDetailModel BoxDayDetailModel = new BoxDayDetailModel(); // 当前盒子对象
    }
    
    public partial class BookDayPanel : QFramework.UIPanel
    {
        private ResLoader mResLoader = ResLoader.Allocate();
      
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as BookDayPanelData ?? new BookDayPanelData();
            BtnBack.onClick.AddListener(() => {AudioManager.PlaySound("Button_Audio"); Back();});
            ImageDownloadUtils.Instance.SetAsyncImage(mData.BoxDayDetailModel.thumbUrl, ImgDay);
            TvDayNum.text = "第" + mData.BoxDayDetailModel.day + "天";
            TvTitle.text = mData.BoxDayDetailModel.topic;
            mData.BoxDayDetailModel.boxDayActionList.ForEach(DayActionModel =>
            {
                mResLoader.LoadSync<GameObject>("ItemTypeAction")
                    .Instantiate()
                    .transform
                    .LocalIdentity()
                    .Parent(Content) 
                    .LocalScale(1,1,1)
                    .ApplySelfTo(game =>
                    {
                        Button button = game.Find("ItemType").GetComponent<Button>();
                        string actionIconName = GetActionIconName(DayActionModel.action); 
                        var texture2D = mResLoader.LoadSync<Texture2D>(actionIconName);
                        button.GetComponent<Image>().sprite = Sprite.Create(texture2D, new Rect(0, 0, texture2D.width, texture2D.height), Vector2.one * 0.5f);
                        button.OnClickAsObservable().Subscribe(_ =>
                        {
                            
                            OnClick(game, DayActionModel);
                        }).AddTo(this);
                            
                        Text actionName = game.transform.Find("Image").Find("Text").GetComponent<Text>();
                        actionName.text = DayActionModel.name;
                    })
                    .Show();
            });
            BtnAttendance.onClick.AddListener(() =>
            {
                AudioManager.PlaySound("Button_Audio");
                if (PlayerPrefsUtil.LockModels[PlayerPrefsUtil.GetBoxMonthIndex()].boxDayList.IsNotNull() 
                    && PlayerPrefsUtil.LockModels[PlayerPrefsUtil.GetBoxMonthIndex()].boxDayList
                        .Contains(mData.BoxDayDetailModel.day))
                {
                    UIMgr.OpenPanel<WorksWallPanel>(new WorksWallPanelData()
                    {
                        BoxId = mData.BoxDayDetailModel.boxId,
                        BoxDay = mData.BoxDayDetailModel.day
                    }, UITransitionType.CIRCLE);
                }
                else
                { 
                    //mData.BoxDayDetailModel
                    UIMgr.OpenPanel<AttendanceMainPanel>(new AttendanceMainPanelData()
                    {
                        BoxId = mData.BoxDayDetailModel.boxId,
                        BoxDay = mData.BoxDayDetailModel.day
                    }, UITransitionType.CIRCLE);
                }
            });
            if (PlayerPrefsUtil.LockModels[PlayerPrefsUtil.GetBoxMonthIndex()].boxDayList != null && PlayerPrefsUtil.LockModels[PlayerPrefsUtil.GetBoxMonthIndex()].boxDayList.Contains(mData.BoxDayDetailModel.day)) // 已打卡
            {
                var texture2D = mResLoader.LoadSync<Texture2D>("btn_attendance_sel");
                BtnAttendance.image.sprite = Sprite.Create(texture2D, new Rect(0, 0, texture2D.width, texture2D.height), Vector2.one * 0.5f);
            }
            else
            {
                var texture2D = mResLoader.LoadSync<Texture2D>("btn_attendance_nor");
                BtnAttendance.image.sprite = Sprite.Create(texture2D, new Rect(0, 0, texture2D.width, texture2D.height), Vector2.one * 0.5f);
            }
            
            SimpleEventSystem.GetEvent<AttendanceSuccess>()
                .Subscribe(_ =>
                {
                    if (PlayerPrefsUtil.LockModels[PlayerPrefsUtil.GetBoxMonthIndex()].boxDayList != null && PlayerPrefsUtil.LockModels[PlayerPrefsUtil.GetBoxMonthIndex()].boxDayList.Contains(mData.BoxDayDetailModel.day)) // 已打卡
                    {
                        var texture2D = mResLoader.LoadSync<Texture2D>("btn_attendance_sel");
                        BtnAttendance.image.sprite = Sprite.Create(texture2D, new Rect(0, 0, texture2D.width, texture2D.height), Vector2.one * 0.5f);
                    }
                    else
                    {
                        var texture2D = mResLoader.LoadSync<Texture2D>("btn_attendance_nor");
                        BtnAttendance.image.sprite = Sprite.Create(texture2D, new Rect(0, 0, texture2D.width, texture2D.height), Vector2.one * 0.5f);
                    }
                }).AddTo(this);
        }

        protected override void OnClose()
        {
            mResLoader.Recycle2Cache();
            mResLoader = null;
        }
        public void OnClick(Transform actionTransform, DayActionModel dayAction)
        {
            AudioManager.SetMusicOff();
            AudioManager.PlaySound("Button_Audio");
            Animator animator = actionTransform.Find("ItemType").GetComponent<Animator>();
            animator.Play("SelectItemTypeAnimation",0,0f);
            Observable.Timer(TimeSpan.FromSeconds(1)).Subscribe(_ => { LoadNextScene(dayAction);}).AddTo(this);
        }
        
    
        private void LoadNextScene(DayActionModel dayActionModel)
        {
            if (dayActionModel.action == 50) // 看视频
            {
                Dictionary<string, object> param = new Dictionary<string, object>();
                Dictionary<string, object> subParam = new Dictionary<string, object>();
                subParam.Add("resourceId", dayActionModel.resourceId);
                if (Application.platform == RuntimePlatform.Android)
                {
                    param.Add("target", AppConst.VIDEO_ANDROID);
                    param.Add("params", subParam);
                    AndroidForUnity.CallAndroidStartActivityForAnim(param.ToJson(), AppConst.ANIM_CIRCLE);
                }
                else
                {
                    param.Add("target", AppConst.VIDEO_IOS);
                    param.Add("params", subParam);
                    IOSClientUtil.CallIOSClient(param.ToJson());
                }
            } else if (dayActionModel.action == 60)
            {
                UIMgr.OpenPanel<BookDetailPanel>(new BookDetailPanelData()
                {
                    DayActionModel = dayActionModel
                }, UITransitionType.CIRCLE, this);
            } else if (dayActionModel.action == 70) //休息
            {
                
            } else if (dayActionModel.action == 0) //亲子互动
            {
                UIMgr.OpenPanel<PlayGamePanel>(new PlayGamePanelData()
                {
                    DayActionModel = dayActionModel
                }, UITransitionType.CIRCLE, this);
            } else if (dayActionModel.action == 80)
            {
                Dictionary<string, object> param = new Dictionary<string, object>();
                Dictionary<string, object> subParam = new Dictionary<string, object>();
                subParam.Add("resourceId", dayActionModel.resourceId);
                if (Application.platform == RuntimePlatform.Android)
                {
                    param.Add("target", AppConst.WORDCOVER_ANDROID);
                    param.Add("params", subParam); 
                    AndroidForUnity.CallAndroidStartActivityForAnim(param.ToJson(), AppConst.ANIM_CIRCLE);
                }
                else
                {
                    param.Add("target", AppConst.WORDCOVER_IOS);
                    param.Add("params", subParam); 
                    IOSClientUtil.CallIOSClient(param.ToJson());
                }
            }
            else
            {
                Dictionary<string, object> param = new Dictionary<string, object>();
                Dictionary<string, object> subParam = new Dictionary<string, object>();
                subParam.Add("resourceId", dayActionModel.resourceId);
                subParam.Add("planId", PlayerPrefsUtil.ContentModel.planId);
                subParam.Add("boxId", mData.BoxDayDetailModel.boxId);
                subParam.Add("subject",PlayerPrefsUtil.ContentModel.subject);
                if (Application.platform == RuntimePlatform.Android)
                {
                    param.Add("target", AppConst.AUDIO_ANDROID);
                    param.Add("params", subParam);
                    Debug.Log("params ========" + subParam); 
                    AndroidForUnity.CallAndroidStartActivityForAnim(param.ToJson(), AppConst.ANIM_CIRCLE);
                }
                else
                {
                    param.Add("target", AppConst.AUDIO_IOS);
                    param.Add("params", subParam); 
                    IOSClientUtil.CallIOSClient(param.ToJson());
                }
            }
        }
   
        public string GetActionIconName(int action)
        {
            // 0-亲子互动, 1-听儿歌, 2-听故事, 3-听绘本音频, 4-听卡片音频, 50-看视频, 60-读绘本, 70-休息, 80-词卡包音频
            switch (action)
            {
                case 0: return "ic_play_game";
                case 1: return "ic_listen_music";
                case 2: return "ic_listen_story";
                case 3: return "ic_listen_music";
                case 4: return "ic_listen_idiom";
                case 50: return "ic_watch_tv";
                case 60: return "ic_read_book";
                case 80: return (PlayerPrefsUtil.ContentModel.subject == 1 ? "ic_word_card" : "ic_learn_read");
                default: return "ic_play_game";
            }
        }
    }
}
