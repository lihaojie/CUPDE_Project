//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using QFramework;
using SuperKid.Utils;
using UniRx;
namespace SuperKid
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    
    
    public class AddressListPanelData : QFramework.UIPanelData
    {
    }
    
    public partial class AddressListPanel : QFramework.UIPanel
    {
	    private ResLoader mResLoader = ResLoader.Allocate();

	    
        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {
            throw new System.NotImplementedException ();
        }
        
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as AddressListPanelData ?? new AddressListPanelData();
            // please add init code here
            BtnBack.onClick.AddListener(() => {  Back(); });
            StartRequestForGetAddress();
            SimpleEventSystem.GetEvent<UpdateAddressDate>()
	            .Subscribe(_ =>
	            {
		            Log.I("_.GetDate: " + _.GetIsUpdate);
		            if (_.GetIsUpdate)
		            {
			            StartRequestForGetAddress();
		            }
	            }).AddTo(this);
        }
        
        
        private void StartRequestForGetAddress()
		{
			Dictionary<string, object> param = new Dictionary<string, object>();
			if (PlayerPrefsUtil.UserInfo == null)
			{
				CommonUtil.toast("数据异常，请重新登录");
				return;
			}
			param.Add("babyId",PlayerPrefsUtil.UserInfo.relBabyId);
			param.Add("pageSize",500);
			param.Add("pageNum",1);
			HttpUtil.PostWithSign<AddressInfoModel>(UrlConst.BabyAddressListPage,param)
				.Subscribe(model =>
				{
					Log.I(model.ToJson());
					Content.DestroyAllChild();
					foreach (var modelRecord in model.records)
					{
						//SettingAddressItemPrefab SettingAddAddressPrefab
						
						mResLoader.LoadSync<GameObject>("SettingAddressItemPrefab")
							.Instantiate()
							.transform
							.LocalIdentity()
							.Parent(Content) 
							.LocalScale(1,1,1)
							.ApplySelfTo(game =>
							{
								game.Find("ItemAddress/TvName").GetComponent<Text>().text 
									= modelRecord.consignee + " " + modelRecord.consigneeMobile;
								game.Find("ItemAddress/TvAddress").GetComponent<Text>().text 
									= modelRecord.provinceName 
									  + modelRecord.cityName 
										+ modelRecord.areaName 
										+ modelRecord.consigneeAddress;
								if (modelRecord.isDefault == 1)
								{
									game.Find("ItemAddress/ImgDefault").GetComponent<Image>().gameObject.SetActive(true);
								}
								else
								{
									game.Find("ItemAddress/ImgDefault").GetComponent<Image>().gameObject.SetActive(false);
								}
								game.Find("BtnEdit").GetComponent<Button>().onClick.AddListener(() =>
								{
									UIMgr.OpenPanel<AddressEditPanel>(new AddressEditPanelData()
									{
										AddressInfo = modelRecord
									}, UITransitionType.CIRCLE);
								});
								Color nowColor;
								ColorUtility.TryParseHtmlString("#FFCD60", out nowColor);
								game.Find("ImgLine").GetComponent<Image>().color = nowColor;
								game.Find("ItemAddress").GetComponent<Button>().onClick.AddListener(() =>
								{
									Log.I(modelRecord.ToJson());
									SimpleEventSystem.Publish(new ExchangeOrderAddress(modelRecord));
									Back();
								});
							})
							.Show();
					}
					mResLoader.LoadSync<GameObject>("SettingAddAddressPrefab")
						.Instantiate()
						.transform
						.LocalIdentity()
						.Parent(Content) 
						.LocalScale(1,1,1)
						.ApplySelfTo(game =>
						{
							game.Find("BtnAdd").GetComponent<Button>().onClick.AddListener(() =>
							{
								UIMgr.OpenPanel<AddressEditPanel>(new AddressEditPanelData(), UITransitionType.CIRCLE);
							});
							
						})
						.Show();
				}, e =>
				{
					if (e is HttpException)
					{
						HttpException http = e as HttpException;
						Log.E("弹吐司" + http.Message);
					}
				}).AddTo(this);
		}
        
        
        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
	        mResLoader.Recycle2Cache();
	        mResLoader = null;
        }
    }
}
