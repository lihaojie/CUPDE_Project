//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using QFramework;
using SuperKid.Utils;
using UniRx;

namespace SuperKid
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    
    
    public class AddressEditPanelData : QFramework.UIPanelData
    {
        public AddressInfoModel.AddressInfo AddressInfo;
        public bool IsAdd;
    }
    
    public partial class AddressEditPanel : QFramework.UIPanel
    {
        private ProvinceModel selectAddress;
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as AddressEditPanelData ?? new AddressEditPanelData();
            mData.IsAdd = mData.AddressInfo.IsNull();
            BtnBack.onClick.AddListener(() =>
            {
                AudioManager.PlaySound("Button_Audio");
                Back();
            });
            if (mData.IsAdd)
            {
                BtnDelete.gameObject.SetActive(false);
            }
            
            if (!mData.IsAdd)
            {
                InpAddressDetail.text = mData.AddressInfo.consigneeAddress;
                InpName.text = mData.AddressInfo.consignee;
                InpMobile.text = mData.AddressInfo.consigneeMobile;
                TextAddress.text = mData.AddressInfo.provinceName + mData.AddressInfo.cityName + mData.AddressInfo.areaName;
                TextAddress.color = Color.black;
                selectAddress = new ProvinceModel();
                selectAddress.code = mData.AddressInfo.provinceCode;
                selectAddress.name = mData.AddressInfo.provinceName;
                selectAddress.cityCode = mData.AddressInfo.cityCode;
                selectAddress.cityName = mData.AddressInfo.cityName;
                selectAddress.areaCode = mData.AddressInfo.areaCode;
                selectAddress.areaName = mData.AddressInfo.areaName;
                if (mData.AddressInfo.isDefault == 1)
                {
                    Toggle.isOn = true;
                }
                else
                {
                    Toggle.isOn = false;
                }
            }
            BtnAddress.onClick.AddListener(() =>
            {
                AudioManager.PlaySound("Button_Audio");
                UIMgr.OpenPanel<AddressPickerPanel>(new AddressPickerPanelData()
                {
                    selectAddress = selectAddress
                });
            });
            BtnDelete.onClick.AddListener(() =>
            {
                AudioManager.PlaySound("Button_Audio");
                UIMgr.OpenPanel<TipPanel>(new TipPanelData()
                {
                    action = TipAction.AddressDel,
                    message = "确定要删除该地址吗？"
                });
            });
            SimpleEventSystem.GetEvent<TipConfirmClick>()
                .Subscribe(_ =>
                {
                    if (_.GetAction == TipAction.AddressDel)
                    {
                        StartResquestForDelBabyAddress();
                    }
                }).AddTo(this);
            BtnCommit.onClick.AddListener(() =>
            {
                AudioManager.PlaySound("Button_Audio");
                StartResquestForAddOrEditAddress();
            });
            Toggle.onValueChanged.AddListener(ison =>
            {
                AudioManager.PlaySound("Button_Audio");
            });
            
            SimpleEventSystem.GetEvent<SelectAddressDate>()
                .Subscribe(_ =>
                {
                    Log.I("_.GetDate: " + _.GetDate);
                    if (_.IsNotNull() && _.GetDate.IsNotNull())
                    {
                        this.selectAddress = _.GetDate;
                        TextAddress.text = selectAddress.name + selectAddress.cityName + selectAddress.areaName;
                        TextAddress.color = Color.black;
                    }
                }).AddTo(this);
        }

        protected override void OnClose()
        {
        }
        
        private void StartResquestForAddOrEditAddress()
        {

            if (InpName.text.IsNullOrEmpty())
            {
                CommonUtil.toast("请填写收货人姓名");
                return;
            }
            if (InpMobile.text.IsNullOrEmpty())
            {
                CommonUtil.toast("请填写收货人电话");
                return;
            }
            if (selectAddress.IsNull())
            {
                CommonUtil.toast("请选择地区");
                return;
            }
            if (InpAddressDetail.text.IsNullOrEmpty())
            {
                CommonUtil.toast("请填写详细地址");
                return;
            }
            Dictionary<string, object> paramDict = new Dictionary<string, object>();
            paramDict.Add("babyId", PlayerPrefsUtil.UserInfo.relBabyId);
            paramDict.Add("consignee", InpName.text);
            if (!mData.IsAdd )
            {
                paramDict.Add("id", mData.AddressInfo.id); 
            }
            paramDict.Add("consigneeMobile", InpMobile.text);
            paramDict.Add("consigneeAddress", InpAddressDetail.text);
            paramDict.Add("provinceCode", selectAddress.code);
            paramDict.Add("provinceName", selectAddress.name);
            paramDict.Add("cityCode", selectAddress.cityCode);
            paramDict.Add("cityName", selectAddress.cityName);
            paramDict.Add("areaCode", selectAddress.areaCode);
            paramDict.Add("areaName", selectAddress.areaName);
            if (Toggle.isOn)
            {
                paramDict.Add("isDefault", "1");
            }
            else
            {
                paramDict.Add("isDefault", "2");
            }
            
            HttpUtil.PostWithSign<AddressInfoModel.AddressInfo>(mData.IsAdd?UrlConst.AddBabyAddress:UrlConst.EditBabyAddress, paramDict)
                .Subscribe(response =>
                    {
                        if (mData.IsAdd)
                        {
                            CommonUtil.toast("新增地址成功");
                        }
                        else
                        {
                            CommonUtil.toast("修改地址成功");
                        }
                        SimpleEventSystem.Publish(new UpdateAddressDate(true));
                        Back();
                    }
                    , e =>
                    { 
                        if (e is HttpException)
                        {
                            HttpException http = e as HttpException;
                            Log.E("弹吐司" + http.Message);
                        }
                    }).AddTo(this);
            
        }
        
        
        private void StartResquestForDelBabyAddress()
        {
           
            Dictionary<string, object> paramDict = new Dictionary<string, object>();
            paramDict.Add("id", mData.AddressInfo.id);
            HttpUtil.PostWithSign<object>(UrlConst.DelBabyAddress, paramDict)
                .Subscribe(response =>
                    {
                        CommonUtil.toast("删除地址成功");
                        SimpleEventSystem.Publish(new UpdateAddressDate(true));
                        Back();
                    }
                    , e =>
                    { 
                        if (e is HttpException)
                        {
                            HttpException http = e as HttpException;
                            Log.E("弹吐司" + http.Message);
                        }
                    }).AddTo(this);
            
        }

    }
}
