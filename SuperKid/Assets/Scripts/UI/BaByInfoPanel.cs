//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using QFramework;
using SuperKid.Entity;
using SuperKid.Utils;
using UniRx;
namespace SuperKid
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    
    
    public class BaByInfoPanelData : QFramework.UIPanelData
    {
        // public string birthday = DateTime.Now.ToString("yyyy-MM-dd");
        public BabyInfoModel BabyInfoModel;
        public bool IsEdit;
    }
    
    public partial class BaByInfoPanel : QFramework.UIPanel
    {
        private ResLoader mResLoader = ResLoader.Allocate();
        private bool mIsChooseSex;
        private bool mIsChooseBirthday;
        private bool mIsEditName;
        private Texture2D mTexture2DSel, mTexture2DNor;
        private Texture2D mTexture2DSexSel, mTexture2DSexNor;
        private int mSex; // 1男 2女
        private string mBabyHead;
        private string mBirthday = DateTime.Now.ToString("yyyy-MM-dd");

        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as BaByInfoPanelData ?? new BaByInfoPanelData();
            mData.IsEdit = mData.BabyInfoModel.IsNotNull();
            BtnBack.onClick.AddListener(() =>
            {
                AudioManager.PlaySound("Button_Audio");
                Back();
            });
            
            // please add init code here
            InputName.onValueChange.AddListener(Change);
            mTexture2DSel = mResLoader.LoadSync<Texture2D>("btn_code_sel");
            mTexture2DNor = mResLoader.LoadSync<Texture2D>("btn_code_nor");
            mTexture2DSexSel = mResLoader.LoadSync<Texture2D>("bg_sex_sel");
            mTexture2DSexNor = mResLoader.LoadSync<Texture2D>("bg_sex_nor");
            SimpleEventSystem.GetEvent<SelectPickDate>()
                .Subscribe(_ =>
                {
                    Log.I(_.GetDate);
                    mBirthday = _.GetDate;
                    mIsChooseBirthday = true;
                    TextBirthday.text = _.GetDate;
                    Color nowColor;
                    ColorUtility.TryParseHtmlString("#3E3E3F", out nowColor);
                    TextBirthday.color = nowColor;
                }).AddTo(this);
            
            SimpleEventSystem.GetEvent<BabyPhoto>()
                .Subscribe(_ =>
                {
                    Log.I(_.GetPath);
                    // mBabyHead = _.GetPath;
                    // ImageDownloadUtils.Instance.SetAsyncImage("file://" + mBabyHead, ImgBabyHead, false);
                }).AddTo(this);
            
            SimpleEventSystem.GetEvent<ChoosePhotoClick>()
                .Subscribe(_ =>
                {
                    Log.I("_.GetPhotoAction: " + _.GetPhotoAction + " _.GetAction: " + _.GetAction);
                    if (_.GetPhotoAction == ChoosePhotoAction.Baby)
                    {
                        PickImage(_.GetAction);
                    }
                }).AddTo(this);
            
            OnClickListener();
            if (mData.IsEdit)
            {
                ImageDownloadUtils.Instance.SetAsyncImage(mData.BabyInfoModel.babyLogoUrl, ImgBabyHead);
                InputName.text = mData.BabyInfoModel.name;
                mBirthday = mData.BabyInfoModel.birthday;
                TextBirthday.text = mData.BabyInfoModel.birthday;
                Color nowColor;
                ColorUtility.TryParseHtmlString("#3E3E3F", out nowColor);
                TextBirthday.color = nowColor;
                if (mData.BabyInfoModel.sex == 1)
                {
                    BtnBoy.onClick.Invoke();
                }
                else
                {
                    BtnGirl.onClick.Invoke();
                }
                BtnBabyConfirm.enabled = true;
                BtnBabyConfirm.image.sprite = Sprite.Create(mTexture2DNor,
                    new Rect(0, 0, mTexture2DNor.width, mTexture2DNor.height), Vector2.one * 0.5f);
            }
            
            
        }

        private void OnClickListener()
        {
            BtnBabyConfirm.enabled = false;
            BtnBoy.onClick.AddListener(() =>
            {
                AudioManager.PlaySound("Button_Audio");
                mIsChooseSex = true;
                mSex = 1;
                BtnBoy.enabled = false;
                BtnGirl.enabled = true;
                BtnBoy.image.sprite = Sprite.Create(mTexture2DSexSel,
                    new Rect(0, 0, mTexture2DSexSel.width, mTexture2DSexSel.height), Vector2.one * 0.5f);
                BtnGirl.image.sprite = Sprite.Create(mTexture2DSexNor,
                    new Rect(0, 0, mTexture2DSexNor.width, mTexture2DSexNor.height), Vector2.one * 0.5f);
                if (mIsChooseBirthday && mIsEditName)
                {
                    BtnBabyConfirm.enabled = true;
                    BtnBabyConfirm.image.sprite = Sprite.Create(mTexture2DNor,
                        new Rect(0, 0, mTexture2DNor.width, mTexture2DNor.height), Vector2.one * 0.5f);
                }
            });
            BtnGirl.onClick.AddListener(() =>
            {
                AudioManager.PlaySound("Button_Audio");
                mIsChooseSex = true;
                mSex = 2;
                BtnBoy.enabled = true;
                BtnGirl.enabled = false;
                BtnBoy.image.sprite = Sprite.Create(mTexture2DSexNor,
                    new Rect(0, 0, mTexture2DSexNor.width, mTexture2DSexNor.height), Vector2.one * 0.5f);
                BtnGirl.image.sprite = Sprite.Create(mTexture2DSexSel,
                    new Rect(0, 0, mTexture2DSexSel.width, mTexture2DSexSel.height), Vector2.one * 0.5f);
                if (mIsChooseBirthday && mIsEditName)
                {
                    BtnBabyConfirm.enabled = true;
                    BtnBabyConfirm.image.sprite = Sprite.Create(mTexture2DNor,
                        new Rect(0, 0, mTexture2DNor.width, mTexture2DNor.height), Vector2.one * 0.5f);
                }
            });
            BtnBabyMask.onClick.AddListener(() => { ChoosePic(ChoosePhotoAction.Baby); });
            BtnBabyConfirm.onClick.AddListener(() =>
            {
                AudioManager.PlaySound("Button_Audio");
                if (mData.IsEdit)
                {
                    StartResquestForDoUpdateBabyInfo();
                }
                else
                {
                    StartResquestForDoAddBaby();

                }
            });
            BtnBirthday.onClick.AddListener(() =>
            {
                AudioManager.PlaySound("Button_Audio");
                UIMgr.OpenPanel<DatePickerPanel>(new DatePickerPanelData()
                {
                    birthday = mBirthday
                });
            });
        }

        /**
         * type 0baby, 1用户
         */
        private void ChoosePic(ChoosePhotoAction mAction)
        {
            UIMgr.OpenPanel<ChoosePhotoPanel>(new ChoosePhotoPanelData()
            {
                action = mAction
            });
        }

        private void PickImage(NativeAction actionPick)
        {
            
#if UNITY_ANDROID
            NativeGallery.RequestPermission((result, action) =>
            {
                if (result == (int) NativeGallery.Permission.Granted)
                {
                    NativeGallery.GetImageFromGalleryForAndroid( ( path ) =>
                    {
                        if (path.IsNotNullAndEmpty())
                        {
                            mBabyHead = path;
                            ImageDownloadUtils.Instance.SetAsyncImage("file://" + path, ImgBabyHead, false);
                        }
                        Debug.Log( "Image path: " + path );
                    }, "选择图片", "image/*", true, action);
                }
            }, (int) actionPick);
#elif UNITY_IOS

            // NativeGallery.Permission rest;
            if (actionPick == NativeAction.Album)
            {
                NativeGallery.Permission rest = NativeGallery.RequestIPhonePermission(1);
                if (rest == NativeGallery.Permission.Granted)
                {
                    NativeGallery.GetImageFromGallery((backPath) =>
                    {
                        if (backPath.IsNotNullAndEmpty())
                        {
                            mBabyHead = backPath;
                            ImageDownloadUtils.Instance.SetAsyncImage("file://" + backPath, ImgBabyHead, false);
                        }
                    }, "选择图片", "image/*");
                }
            }
            else if (actionPick == NativeAction.Camera)
            {
                NativeGallery.Permission rest = NativeGallery.RequestIPhonePermission(4);
                if (rest == NativeGallery.Permission.Granted)
                {
                    NativeGallery.GetIPhoneCameraImageFromGallery((backPath) =>
                    {
                        if (backPath.IsNotNullAndEmpty())
                        {
                            mBabyHead = backPath;
                            ImageDownloadUtils.Instance.SetAsyncImage("file://" + backPath, ImgBabyHead, false);
                        }
                    }, "选择图片", "image/*");
                }
            }
#else
            
#endif
        }


        void Change(string str)
        {
            if (!str.IsNullOrEmpty())
            {
                mIsEditName = true;
                if(mIsChooseSex && mIsChooseBirthday)
                {
                    BtnBabyConfirm.enabled = true;
                    BtnBabyConfirm.image.sprite = Sprite.Create(mTexture2DNor, new Rect(0, 0, mTexture2DNor.width, mTexture2DNor.height), Vector2.one * 0.5f);
                }
            }
            else
            {
                mIsEditName = false;
                BtnBabyConfirm.enabled = true;
                BtnBabyConfirm.image.sprite = Sprite.Create(mTexture2DSel, new Rect(0, 0, mTexture2DSel.width, mTexture2DSel.height), Vector2.one * 0.5f);
            }
        }
        
        void StartResquestForDoAddBaby()
        {
            if (mBabyHead.IsNullOrEmpty())
            {
                CommonUtil.toast("请选择宝宝头像");
                return;
            }
            BtnBabyConfirm.enabled = false;
            Dictionary<string, object> paramDict = new Dictionary<string, object>();
            paramDict.Add("name", InputName.text);
            paramDict.Add("sex", mSex);
            paramDict.Add("birthday", TextBirthday.text);
            paramDict.Add("creator", PlayerPrefsUtil.GetUserId());
            HttpUtil.PostWithSign<UserInfoModel>(UrlConst.DoAddBaby, paramDict, "babyHead.jpg", mBabyHead)
                .Subscribe(response =>
                    {
                        BtnBabyConfirm.enabled = true;
                        PlayerPrefsUtil.UserInfo = response;
                        UIMgr.OpenPanel<UserInfoPanel>(new UserInfoPanelData(),UITransitionType.NULL, this);
                    }
                    , e =>
                    {
                        BtnBabyConfirm.enabled = true;
                        if (e is HttpException)
                        {
                            HttpException http = e as HttpException;
                            Log.E("弹吐司" + http.Message);
                        }
                    }).AddTo(this);
        }
        
        
        void StartResquestForDoUpdateBabyInfo()
        {
            if (mBabyHead.IsNullOrEmpty())
            {
                if (mData.BabyInfoModel.babyLogoUrl.IsNullOrEmpty())
                {
                    CommonUtil.toast("请选择宝宝头像");
                    return;
                }
            }
            BtnBabyConfirm.enabled = false;
            Dictionary<string, object> paramDict = new Dictionary<string, object>();
            paramDict.Add("name", InputName.text);
            paramDict.Add("sex", mSex);
            paramDict.Add("birthday", TextBirthday.text);
            paramDict.Add("babyId", mData.BabyInfoModel.id);
            HttpUtil.PostWithSign<BabyInfoModel>(UrlConst.DoUpdateBabyInfo, paramDict, "babyHead.jpg", mBabyHead)
                .Subscribe(response =>
                    {
                        BtnBabyConfirm.enabled = true;
                        UserInfoModel userInfoModel = PlayerPrefsUtil.UserInfo;
                        userInfoModel.babyInfoVo = response;
                        PlayerPrefsUtil.UserInfo = userInfoModel;
                        SimpleEventSystem.Publish(new UpdateUserDate(true));
                        Back();
                    }
                    , e =>
                    {
                        BtnBabyConfirm.enabled = true;
                        if (e is HttpException)
                        {
                            HttpException http = e as HttpException;
                            Log.E("弹吐司" + http.Message);
                        }
                    }).AddTo(this);
        }
        
        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
            mResLoader.Recycle2Cache();
            mResLoader = null;
        }
    }
}
