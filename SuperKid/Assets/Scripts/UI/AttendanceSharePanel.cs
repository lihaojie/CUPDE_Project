//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SuperKid.Utils;
using UniRx;
using System.IO;
using QFramework;
using SuperKid.Utils;
using UniRx;
using UnityEngine.Events;

namespace SuperKid
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    
    
    public class AttendanceSharePanelData : QFramework.UIPanelData
    {
        public AttendanceModel AttendanceModel;
        public bool isWall;
    }
    
    public partial class AttendanceSharePanel : QFramework.UIPanel
    {
        private ResLoader mResLoader = ResLoader.Allocate();
        private Texture2D mTexture2DAudio, mTexture2DVideo;
        private Texture2D mTexture2DHBoy, mTexture2DHGirl;
        private Texture2D mTexture2DSubject;
        
        
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as AttendanceSharePanelData ?? new AttendanceSharePanelData();
            // please add init code here
            BtnBack.onClick.AddListener(() =>
            {
                AudioManager.PlaySound("Button_Audio");
                Back();
            });
            // ImageDownloadUtils.Instance.SetAsyncImage("http://test.i.hqkid.cn/robot-mobile/api/file/babypunch/2020/05/14/1589450722841.jpg", ImageContent);
            mTexture2DHBoy = mResLoader.LoadSync<Texture2D>("ic_head_boy");
            mTexture2DHGirl = mResLoader.LoadSync<Texture2D>("ic_head_girl");
            UserInfoModel userInfoModel = PlayerPrefsUtil.UserInfo;
            if (userInfoModel.babyInfoVo.babyLogoUrl.IsNotNullAndEmpty())
            {
                ImageDownloadUtils.Instance.SetAsyncImage(userInfoModel.babyInfoVo.babyLogoUrl, ImageHead);
            } 
            else if (userInfoModel.babyInfoVo.sex == 1)
            {
                ImageHead.sprite = Sprite.Create(mTexture2DHBoy,
                    new Rect(0, 0, mTexture2DHBoy.width, mTexture2DHBoy.height), Vector2.one * 0.5f);
            }
            else if (userInfoModel.babyInfoVo.sex == 2)
            {
                ImageHead.sprite = Sprite.Create(mTexture2DHGirl,
                    new Rect(0, 0, mTexture2DHGirl.width, mTexture2DHGirl.height), Vector2.one * 0.5f);
            }
            TextName.text = userInfoModel.babyInfoVo.name;
            mTexture2DAudio = mResLoader.LoadSync<Texture2D>("ic_share_audio");
            mTexture2DVideo = mResLoader.LoadSync<Texture2D>("ic_share_video");
            String subjectPicName = "ic_share_qiangguo";
            if (mData.AttendanceModel.subject == 0)
            {
                subjectPicName = "ic_share_qiangguo";
            }
            else if (mData.AttendanceModel.subject == 1)
            {
                subjectPicName = "ic_share_english";
            }
            else if (mData.AttendanceModel.subject == 2)
            {
                subjectPicName = "ic_share_chinese";
            }
            mTexture2DSubject = mResLoader.LoadSync<Texture2D>(subjectPicName);
            ImageSubject.sprite = Sprite.Create(mTexture2DSubject,
                new Rect(0, 0, mTexture2DSubject.width, mTexture2DSubject.height), Vector2.one * 0.5f);
            if (mData.AttendanceModel.punchType == 0)
            {
                ImageDownloadUtils.Instance.SetAsyncImage(mData.AttendanceModel.punchPath, ImageContent);
            }
            else if (mData.AttendanceModel.punchType == 1)
            {
                ImageContent.sprite = Sprite.Create(mTexture2DAudio,
                    new Rect(0, 0, mTexture2DAudio.width, mTexture2DAudio.height), Vector2.one * 0.5f);
            }
            else if (mData.AttendanceModel.punchType == 2)
            {
                ImageContent.sprite = Sprite.Create(mTexture2DVideo,
                    new Rect(0, 0, mTexture2DVideo.width, mTexture2DVideo.height), Vector2.one * 0.5f);
            }
            TextContent.text = mData.AttendanceModel.punchText;
            TextCount.text = mData.AttendanceModel.finishPunchNum.ToString();
            if (mData.AttendanceModel.score != 0)
            {
                CommonUtil.toast("打卡成功+" + mData.AttendanceModel.score + "积分");
            }

            BtnSaveAlbum.onClick.AddListener(() =>
            {
                AudioManager.PlaySound("Button_Audio");
                StartResquestForSharePoster(ShareAction.Save);
            });
            BtnShareWechat.onClick.AddListener(() =>
            {
                AudioManager.PlaySound("Button_Audio");
                StartResquestForSharePoster(ShareAction.Wechat);
            });
            BtnShareWechatMoments.onClick.AddListener(() =>
            {
                AudioManager.PlaySound("Button_Audio");
                StartResquestForSharePoster(ShareAction.WechatMoments);
            });
            
            SimpleEventSystem.GetEvent<ShareResult>().Subscribe(res =>
            {
                //1成功2失败3取消
                string status = res.Status;
                if ("1".Equals(status))
                {
                    if (mData.AttendanceModel.isShare == 0)
                    {
                        CommonUtil.toast("分享成功+" + mData.AttendanceModel.shareScore + "积分");
                        mData.AttendanceModel.isShare = 1;
                    }
                    StartResquestForAddRecord();
                }
                else if ("2".Equals(status))
                {
                }
                else if ("3".Equals(status))
                {
                }

            }).AddTo(this);
        }
        
        private void StartResquestForSharePoster(ShareAction shareAction)
        {
            Dictionary<string, object> paramDict = new Dictionary<string, object>();
            paramDict.Add("babyId", PlayerPrefsUtil.GetBabyId());
            paramDict.Add("shareType", 6);
            paramDict.Add("relBoxId", mData.AttendanceModel.relBoxId);
            paramDict.Add("boxDay", mData.AttendanceModel.boxDay);
            HttpUtil.PostWithSign<string>(UrlConst.SharePoster, paramDict)
                .Subscribe(response =>
                    {
                        Log.I("图片地址： " + response);
                        if (shareAction == ShareAction.Save)
                        {
                            if (Application.platform == RuntimePlatform.Android)
                            {
                                NativeGallery.RequestPermission((result, action) =>
                                {
                                    if (result == (int) NativeGallery.Permission.Granted)
                                    {
                                        AndroidForUnity.CallAndroidForSavePicToAlbum(response);
                                    }
                                }, (int) NativeAction.Album);
                            }
                            else if (Application.platform == RuntimePlatform.IPhonePlayer)
                            {
                                IOSClientUtil.SaveImageToAlubmCallIOSClient(response);
                            }
                        } 
                        else if (shareAction == ShareAction.Wechat)
                        {
                            if (Application.platform == RuntimePlatform.Android)
                            {
                                ShareModel shareModel = new ShareModel();
                                shareModel.imageUrl = response;
                                shareModel.platformName = AppConst.SHARE_WECHAT;
                                shareModel.type = AppConst.SHARE_IMAGE_TYPE;
                                shareModel.title = AppConst.SHARE_TITLE;
                                if (mData.AttendanceModel.isShare == 0)
                                {
                                    shareModel.toastMessage = "分享成功+" + mData.AttendanceModel.shareScore + "积分";
                                }
                                AndroidForUnity.CallAndroidForShare(SerializeHelper.ToJson(shareModel));
                            }
                            else if (Application.platform == RuntimePlatform.IPhonePlayer)
                            {
                                Dictionary<string,object> sharParmsDic = new Dictionary<string, object>();
                                sharParmsDic.Add("platformType","WechatSession");
                                sharParmsDic.Add("shareType","image");
                                sharParmsDic.Add("image",response);
                                if (mData.AttendanceModel.isShare == 0)
                                {
                                    string shareToastMessage = "分享成功+" + mData.AttendanceModel.shareScore + "积分";
                                    sharParmsDic.Add("shareToastMsg",shareToastMessage);
                                }
                                IOSClientUtil.ShareObjectCallIOSClient(SerializeHelper.ToJson(sharParmsDic));
                            }
                        }
                        else if (shareAction == ShareAction.WechatMoments)
                        {
                            if (Application.platform == RuntimePlatform.Android)
                            {
                                ShareModel shareModel = new ShareModel();
                                shareModel.imageUrl = response;
                                shareModel.platformName = AppConst.SHARE_WECHAT_MOMENTS;
                                shareModel.type = AppConst.SHARE_IMAGE_TYPE;
                                shareModel.title = AppConst.SHARE_TITLE;
                                if (mData.AttendanceModel.isShare == 0)
                                {
                                    shareModel.toastMessage = "分享成功+" + mData.AttendanceModel.shareScore + "积分";
                                }
                                AndroidForUnity.CallAndroidForShare(SerializeHelper.ToJson(shareModel));
                            }
                            else if (Application.platform == RuntimePlatform.IPhonePlayer)
                            {
                                Dictionary<string,object> sharParmsDic = new Dictionary<string, object>();
                                sharParmsDic.Add("platformType","WechatTimeLine");
                                sharParmsDic.Add("shareType","image");
                                sharParmsDic.Add("image",response);
                                if (mData.AttendanceModel.isShare == 0)
                                {
                                    string shareToastMessage = "分享成功+" + mData.AttendanceModel.shareScore + "积分";
                                    sharParmsDic.Add("shareToastMsg",shareToastMessage);
                                }
                                IOSClientUtil.ShareObjectCallIOSClient(SerializeHelper.ToJson(sharParmsDic));
                            }
                        }
                    }
                    , e =>
                    { 
                        if (e is HttpException)
                        {
                            HttpException http = e as HttpException;
                            Log.E("弹吐司" + http.Message);
                        }
                    }).AddTo(this);
            
        }

        private void StartResquestForAddRecord()
        {
            Dictionary<string, object> paramDict = new Dictionary<string, object>();
            paramDict.Add("relBabyId", PlayerPrefsUtil.GetBabyId());
            paramDict.Add("shareType", 6);
            paramDict.Add("relBabyPunchId", mData.AttendanceModel.id);
            HttpUtil.PostWithSign<object>(UrlConst.AddRecord, paramDict)
                .Subscribe(response =>
                    {
                        
                    }
                    , e =>
                    { 
                        if (e is HttpException)
                        {
                            HttpException http = e as HttpException;
                            Log.E("弹吐司" + http.Message);
                        }
                    }).AddTo(this);
        }

        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
            mResLoader.Recycle2Cache();
            mResLoader = null;
        }
    }
}
