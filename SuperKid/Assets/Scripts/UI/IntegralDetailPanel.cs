//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SuperKid
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    using QFramework;
    using Entity;
    using UniRx;
    

    
    public class IntegralDetailPanelData : QFramework.UIPanelData
    {
        // 1. 选中 兑换记录 2.积分获取记录
        public int panelToggleType;

    }
    
    public partial class IntegralDetailPanel : QFramework.UIPanel
    {
        private ResLoader mResLoader = ResLoader.Allocate();

        
        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {
            throw new System.NotImplementedException ();
        }
        
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as IntegralDetailPanelData ?? new IntegralDetailPanelData();
            // please add init code here
            RequestGoodList(3);
            RequestGoodList(1);
            
            if (mData.panelToggleType == 1)
            {
                IntegralExChangelToggle.isOn = true;
                IntegralRecorderToggle.isOn = false;
            }
            else if (mData.panelToggleType == 2)
            {
                IntegralExChangelToggle.isOn = false;
                IntegralRecorderToggle.isOn = true;
            }
            
            BtnBack.OnClickAsObservable().Subscribe(_ =>
            {
                AudioManager.PlaySound("Button_Audio");
                Back();
            }).AddTo(this);
        }
        
        
        /**
         * 积分列表数据
         * type 积分类型(3:兑换明细;1:获取明细)
         */
        private void RequestGoodList(int type)
        {
            
            Dictionary<string, object> paramDict = new Dictionary<string, object>();

            paramDict.Add("babyId", PlayerPrefsUtil.GetBabyId());
            paramDict.Add("type",type);
            paramDict.Add("pageNum", 1);
            paramDict.Add("pageSize", 9999);
            Debug.Log(paramDict);
            
            HttpUtil.GetWithSign<BabyScoreExchangeModel>(UrlConst.BabyScore, paramDict)
                .Subscribe(response =>
                    {
                        Debug.Log("------"+ response);

                        if (type == 3)
                        {
                            CreatExchangeListItem(response.records);
                        }
                        else if (type == 1)
                        {
                            CreatIntegralGetItem(response.records);
                        }
                        else
                        {
                            
                        }
                        
                    }
                    , e =>
                    {
                        if (e is HttpException)
                        {
                            HttpException http = e as HttpException;
                            Log.E("弹吐司" + http.Message);
                        }
                    }).AddTo(this);
        }
        
        
        /**
         * 兑换记录 的 item
         */
        private void CreatExchangeListItem(List<IntegralExchangeModel> modelslist)
        {
            if (modelslist.Count > 0)
            {
                ExchangeNODataContent.gameObject.SetActive(false);
            }
            else
            {
                ExchangeNODataContent.gameObject.SetActive(true);
            }
            Debug.Log("初始化 Medal 相关信息 ");
            foreach (var model in modelslist)
            {
                mResLoader.LoadSync<GameObject>("ItemExchangeListPanel")
                    .Instantiate()
                    .transform
                    .LocalIdentity()
                    .Parent(ExchangeScrollView.transform.Find("Viewport").Find("Content"))
                    .LocalScale(1, 1, 1)
                    .ApplySelfTo(ItemExchangeListPanel =>
                        {
                            var goodsIconImg = ItemExchangeListPanel.Find("ImageCorner/ImageMask/ImageGift").GetComponent<Image>();
                            var nameText = ItemExchangeListPanel.Find("Text").GetComponent<Text>();
                            var TimeText = ItemExchangeListPanel.Find("TextCreatTime").GetComponent<Text>();
                            var scoreText = ItemExchangeListPanel.Find("GameObject/Text").GetComponent<Text>();
                            
                            ImageDownloadUtils.Instance.SetAsyncImage(model.icon, goodsIconImg);

                            nameText.text = model.name;
                            TimeText.text = model.createTime;
                            scoreText.text = String.Format("x{0}",model.score.ToString());
                            var ItemBtn = ItemExchangeListPanel.Find("BtnItem").GetComponent<Button>();
                            ItemBtn.OnClickAsObservable().Subscribe(_ =>
                            {
                                AudioManager.PlaySound("Button_Audio");
                                UIMgr.OpenPanel<CreateOrderPanel>(new CreateOrderPanelData()
                                {
                                    orderId = model.orderId,
                                }, UITransitionType.CIRCLE,this);
                            }).AddTo(this);

                        });
            }
            
        }
        
                
        /**
         * 积分获取记录 的 item
         */
        private void CreatIntegralGetItem(List<IntegralExchangeModel> modelslist)
        {
            
            if (modelslist.Count > 0)
            {
                RecordNODataContent.gameObject.SetActive(false);
            }
            else
            {
                RecordNODataContent.gameObject.SetActive(true);
            }
            Debug.Log("初始化 Medal 相关信息 ");
            foreach (var model in modelslist)
            {
                mResLoader.LoadSync<GameObject>("ItemIntegralGetListPanel")
                    .Instantiate()
                    .transform
                    .LocalIdentity()
                    .Parent(IntegralGetScrollView.transform.Find("Viewport").Find("Content"))
                    .LocalScale(1, 1, 1)
                    .ApplySelfTo(ItemIntegralGetListPanel =>
                    {
                        var nameText = ItemIntegralGetListPanel.Find("TextName").GetComponent<Text>();
                        var TimeText = ItemIntegralGetListPanel.Find("TextCreatTime").GetComponent<Text>();
                        var scoreText = ItemIntegralGetListPanel.Find("GameObject/TextScore").GetComponent<Text>();
                        nameText.text = model.name;
                        TimeText.text = model.createTime;
                        scoreText.text = String.Format("x{0}",model.score.ToString());
                    });
            }
            
        }
        
        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
            mResLoader.Recycle2Cache();
            mResLoader = null;
        }
    }
}
